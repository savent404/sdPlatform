<diagram program="umletino" version="14.4.0-SNAPSHOT"><zoom_level>10</zoom_level><help_text>Space for diagram notes</help_text><element><id>UMLClass</id><coordinates><x>400</x><y>278</y><w>390</w><h>300</h></coordinates><panel_attributes>&lt;&lt; Abstract &gt;&gt;
driver
--
+ driver(...)
+ ~driver()
+ open(device_id, int flags):int
+ close(device_id):int
+ transfer(device_id, const char *, size_t, char *, size_t):int
+ read(device_id, char *, size_t):int
+ write(device_id, const char *, size_t):int
+ ioctl(device_id, void *in_out, size_t *out, size_t maxium_len):int
+ bind(device_id, driver_id)
+ unbind(device_id):int
+ fromJson(const char *): driver *
+ toJson(driver *): const char *
--
# conf: parameters
# runtime: driver_runtime
# api: internal_api
--
- binded_device: device *</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>960</x><y>58</y><w>380</w><h>170</h></coordinates><panel_attributes>&lt;&lt; Interface &gt;&gt;
f_ops
--
+ bind(device_id, driver_id)
--
+ open(device_id, int flags):int
+ close(device_id):int
+ transfer(device_id, const char *, size_t, char *, size_t):int
+ read(device_id, char *, size_t):int
+ write(device_id, const char *, size_t):int
+ ioctl(device_id, void *in_out, size_t *out, size_t maxium_len):int
+ unbind(device_id):int</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1050</x><y>278</y><w>210</w><h>260</h></coordinates><panel_attributes>&lt;&lt; Abstract &gt;&gt;
device
--
+ open()
+ close()
+ transfer()
+ write()
+ read()
+ ioctl()
+ bind()
+ fromJson(const char*): device *
+ toJson(device *): const char *
--
# binded_driver_id : driver_id
# conf: device_conf
# data: device_data
--
- binded_driver_instance: driver *
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1140</x><y>218</y><w>30</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;60</additional_attributes></element><element><id>UMLClass</id><coordinates><x>400</x><y>58</y><w>380</w><h>170</h></coordinates><panel_attributes>&lt;&lt; Interface &gt;&gt;
driver_ops
--
+ bind(device_id, driver_id)
--
+ open(device_id, int flags):int
+ close(device_id):int
+ transfer(device_id, const char *, size_t, char *, size_t):int
+ read(device_id, char *, size_t):int
+ write(device_id, const char *, size_t):int
+ ioctl(device_id, void *in_out, size_t *out, size_t maxium_len):int
+ unbind(device_id):int</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>580</x><y>218</y><w>90</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-
implement</panel_attributes><additional_attributes>10;10;10;60</additional_attributes></element><element><id>Relation</id><coordinates><x>780</x><y>388</y><w>290</w><h>40</h></coordinates><panel_attributes>lt=&lt;&lt;-
driver_id2instance</panel_attributes><additional_attributes>10;20;270;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1450</x><y>58</y><w>280</w><h>110</h></coordinates><panel_attributes>&lt;&lt;single&gt;&gt;
devmanager
--
+ register_device(const char *json): bool
+ register_driver(const char *json): bool
+ unregister_device(const char *json): bool
+ unregister_driver(const char *json): bool</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>50</x><y>258</y><w>230</w><h>120</h></coordinates><panel_attributes>&lt;&lt;single&gt;&gt;
syscall
--
+ register_syscall(int id, callback)
+ unregister_syscall(int id)
--
# handle()
--
- callbacks</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>60</x><y>438</y><w>230</w><h>140</h></coordinates><panel_attributes>&lt;&lt;Abstrace&gt;&gt;
parameters
--
+ driver_env(std::initialzer_list&lt;iter&gt;)
+ vister(const char * key)
+ addKey(const char *key)
+ toJson() : const char *
+ fromJson(const char *)
--
- map


</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>280</x><y>488</y><w>140</w><h>40</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes><additional_attributes>120;20;10;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>400</x><y>646</y><w>390</w><h>270</h></coordinates><panel_attributes>&lt;&lt; Abstract &gt;&gt;
driver_specific_platform
--
+ open(device_id, int flags):int
+ close(device_id):int
+ transfer(device_id, const char *, size_t, char *, size_t):int
+ read(device_id, char *, size_t):int
+ write(device_id, const char *, size_t):int
+ ioctl(device_id, void *in_out, size_t *out, size_t maxium_len):int
+ bind(device_id, driver_id)
+ unbind(device_id):int
+ fromJson(const char *): driver *
+ toJson(driver *): const char *
--
# conf: parameters
# runtime: driver_runtime
# api: internal_api
--
- binded_device: device *</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>0</x><y>818</y><w>280</w><h>110</h></coordinates><panel_attributes>&lt;&lt; Interface&gt;&gt;
driver_specific_platform_api
--
+ setup(driver_runtime*, device* ): int
+ teardown(driver_runtime *, device_runtime*)
+ transfer...
....
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>270</x><y>858</y><w>150</w><h>40</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes><additional_attributes>130;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>580</x><y>570</y><w>90</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-
implement</panel_attributes><additional_attributes>10;10;10;70</additional_attributes></element><element><id>Relation</id><coordinates><x>276</x><y>317</y><w>140</w><h>40</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;120;11</additional_attributes></element><element><id>Relation</id><coordinates><x>271</x><y>334</y><w>150</w><h>40</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;130;11</additional_attributes></element></diagram>